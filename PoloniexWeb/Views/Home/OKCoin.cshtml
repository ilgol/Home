@model PoloniexWeb.Models.CurrencyModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Plugins/select2/select2.min.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/jquery-jgrowl/1.4.1/jquery.jgrowl.min.css" />
<link href="~/Content/Cryptocoins/cryptocoins.css" rel="stylesheet" />
<link href="~/Content/Cryptocoins/cryptocoins-colors.css" rel="stylesheet" />
<main id="main">
    <div class="container">
        <div class="content">
            <div class="row">
                <div class="col-lg-4 col-md-4 animated fadeInUp">
                    <div class="small-box bg-green" id="BTC_USD">
                        <div class="inner">
                            <span class='count btc'>0</span><sup style="font-size: 20px">$</sup>

                            <p>USDT/BTC</p>
                        </div>
                        <div class="icon">
                            <i class="cc-BTC"></i>
                        </div>
                        <a href="https://www.okcoin.com/market-btc.html" target="_blank" class="small-box-footer">
                            Узнать больше <i class="fa fa-arrow-circle-right"></i>
                        </a>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 animated fadeInUp">
                    <div class="small-box bg-green" id="ETH_USD">
                        <div class="inner">
                            <span class='count eth'>0</span><sup style="font-size: 20px">$</sup>
                            <p>USDT/ETH</p>
                        </div>
                        <div class="icon">
                            <i class="cc-ETH"></i>
                        </div>
                        <a href="https://www.okcoin.com/market-eth.html" target="_blank" class="small-box-footer">
                            Узнать больше <i class="fa fa-arrow-circle-right"></i>
                        </a>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 animated fadeInUp">
                    <div class="small-box bg-green" id="LTC_USD">
                        <div class="inner">
                            <span class='count ltc'>0</span><sup style="font-size: 20px">$</sup>
                            <p>USDT/LTC</p>
                        </div>
                        <div class="icon">
                            <i class="cc-LTC"></i>
                        </div>
                        <a href="https://www.okcoin.com/market-ltc.html" target="_blank" class="small-box-footer">
                            Узнать больше <i class="fa fa-arrow-circle-right"></i>
                        </a>
                    </div>
                </div>

            </div>
            <div class="row animated fadeInUp">
                <div class="col-lg-12 col-md-12">
                    <!-- box-security -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Валюта для отслеживания</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body">
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-primary"><i class="fa fa-money"></i></button>
                                    </div>
                                    <!-- /btn-group -->
                                    @Html.DropDownList("Pairs", new SelectList(ViewBag.Pairs, "Value", "Text", "Ничего не выбрано"), htmlAttributes: new { @class = "form-control select2", id = "pair" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-success"><i class="fa fa-arrow-up"></i></button>
                                    </div>
                                    <!-- /btn-group -->
                                    <input type="text" id="up" placeholder="Верхняя граница" class="form-control" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-danger"><i class="fa fa-arrow-down"></i></button>
                                    </div>
                                    <!-- /btn-group -->
                                    <input type="text" id="down" placeholder="Нижняя граница" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer desktop">
                            <button type="submit" disabled class="btn btn-warning pull-left stop">Остановить отслеживание</button>
                            <button type="submit" disabled class="btn btn-success pull-right start">Начать отслеживание</button>
                        </div>
                        <div class="box-footer mobile" style="display:none">
                            <button type="submit" disabled class="btn btn-warning pull-left stop">Остановить</button>
                            <button type="submit" disabled class="btn btn-success pull-right start">Начать</button>
                        </div>

                    </div>
                </div>
            </div>
            <div class="row animated fadeInUp">
                <div class="col-md-12 col-lg-12">
                    <!-- The time line -->
                    <ul class="timeline">
                        <!-- timeline time label -->
                        <li class="time-label">
                            <span class="bg-green">
                                @TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime.UtcNow, "FLE Standard Time").ToString("dd MMMM yyyy", System.Globalization.CultureInfo.GetCultureInfo("ru-RU"))
                            </span>
                        </li>
                        <li>
                            <i class="fa fa-user bg-aqua"></i>
                            <div class="timeline-item">
                                <span class="time"><i class="fa fa-clock-o"></i> @TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime.UtcNow, "FLE Standard Time").ToString("HH:mm", System.Globalization.CultureInfo.GetCultureInfo("ru-RU"))</span>

                                <h3 class="timeline-header no-border"><a href="#">ILGOL</a> Начало работы</h3>
                            </div>
                        </li>
                        <li>
                            <i class="fa fa-clock-o bg-gray"></i>
                        </li>
                    </ul>
                </div>
                <!-- /.col -->
            </div>
        </div>
    </div>
</main>
<footer id="footer" class="inner-page">
    <div class="footer-pane">
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12 col-lg-12">
                <div class="copyright">© 2017 ILGOL. All Rights Reserved</div>
            </div>
        </div>
    </div>
</footer>
@section Modals {
    <div class="modal modal-danger fade" id="modal-danger" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title">Понижение</h4>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="stopAlarm()" class="btn btn-outline pull-left" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <div class="modal modal-success fade" id="modal-success" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title">Повышение</h4>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="stopAlarm()" class="btn btn-outline pull-left" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
}
@section scripts{
    <script src="~/Plugins/select2/select2.full.min.js"></script>
    <script src="~/Scripts/autobahn.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-jgrowl/1.4.1/jquery.jgrowl.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/slideout/1.0.1/slideout.min.js"></script>

    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-103826799-1', 'auto');
        ga('send', 'pageview');

    </script>
    <script>
        var recieved = false;
        var x = document.getElementById("audio");
        var isStart = false;
        var pair;
        var state = 0;
        function stop() {
            $(".start").removeAttr("disabled");
            $(".start").attr('enabled', 'enabled');
            $(".stop").removeAttr("enabled");
            $(".stop").attr('disabled', 'disabled');
            isStart = false;
            state = 0;
        }
        async function checkNewCourseForLabel(old, last, pair) {
            if (old < last)
                $(document.getElementById(pair)).removeAttr('class').addClass("small-box").addClass("bg-green");
            if (old > last)
                $(document.getElementById(pair)).removeAttr('class').addClass("small-box").addClass("bg-red");
            if (old == last)
                $(document.getElementById(pair)).removeAttr('class').addClass("small-box").addClass("bg-primary");
        }
        async function updateUI(last, pair) {
            switch (pair) {
                case "BTC_USD":
                    checkNewCourseForLabel($("span.btc").text(), last, pair);
                    $("span.btc").text(last);
                    break;
                case "ETH_USD":
                    checkNewCourseForLabel($("span.eth").text(), last, pair);
                    $("span.eth").text(last);
                    break;
                case "LTC_USD":
                    checkNewCourseForLabel($("span.ltc").text(), last, pair);
                    $("span.ltc").text(last);
                    break;
            }
        }
        function selectState(up, down) {
            if (up == "" && down != "")
                return 1;
            else if (down == "" && up != "")
                return 2;
            else if (up > down)
                return 3;
            else
                return 4;
        }
        function stopAlarm() {
            x.pause();
            x.currentTime = 0;
        }
        function alarm() {
            x.play();
        }
        function checkNewCourse(current, newCourse) {
            if (newCourse > current)
                return 1;
            if (newCourse < current)
                return 2;
            if (newCourse == current)
                return 3;
        }
        async function updateTimeLineForUp(pair, course) {
            $(`<li class="time-label">
                    <span class="bg-green">
                        ` + moment().locale("ru").format("DD MMMM YYYY") + `
                    </span>
               </li>
               <li>
                    <i class="fa fa-arrow-up bg-green"></i>
                    <div class="timeline-item">
                        <span class="time"><i class="fa fa-clock-o"></i> ` + moment().locale("ru").format("HH:mm") + `</span>
                        <h3 class="timeline-header no-border"><a href="#">` + pair + `</a> Повышение до ` + course + `</h3>
                    </div>
               </li>`).prependTo('.timeline').hide().slideDown();
        }
        async function updateTimeLineForDown(pair, course) {
            $(`<li class="time-label">
                    <span class="bg-green">
                        ` + moment().locale("ru").format("DD MMMM YYYY") + `
                    </span>
              </li>
              <li>
                    <i class="fa fa-arrow-down bg-red"></i>
                    <div class="timeline-item">
                        <span class="time"><i class="fa fa-clock-o"></i> ` + moment().locale("ru").format("HH:mm") + `</span >
                        <h3 class="timeline-header no-border"><a href="#">` + pair + `</a> Понижение до ` + course + `</h3>
                    </div>
              </li>`).prependTo(".timeline").hide().slideDown();
        }
        async function updateTimeLineForRecivedGoal(pair, course) {
            $(`<li class="time-label">
                    <span class="bg-green">
                        ` + moment().locale("ru").format("DD MMMM YYYY") + `
                    </span>
               </li>
               <li>
                    <i class="fa fa-flag-checkered bg-yellow"></i>
                    <div class="timeline-item">
                        <span class="time"><i class="fa fa-clock-o"></i> ` + moment().locale("ru").format("HH:mm") + `</span>
                        <h3 class="timeline-header no-border"><a href="#">` + pair + `</a> Курс достиг заданого критерия ` + course + `</h3>
                    </div>
               </li>`).prependTo(".timeline").hide().slideDown();

        }
        async function updateTimeLineForCurrent(pair, course) {
            $(`<li class="time-label">
                    <span class="bg-green">
                        ` + moment().locale("ru").format("DD MMMM YYYY") + `
                    </span>
               </li>
               <li>
                    <i class="fa fa-minus bg-default"></i>
                    <div class="timeline-item">
                        <span class="time"><i class="fa fa-clock-o"></i> ` + moment().locale("ru").format("HH:mm") + `</span>
                        <h3 class="timeline-header no-border"><a href="#">` + pair + `</a> Без изменений ` + course + `</h3>
                    </div>
               </li>`).prependTo(".timeline").hide().slideDown();
        }
        var old = 0;
        async function newItemRecieved(last, ticker) {
            if (old != 0) {
                switch (checkNewCourse(old, last)) {
                    case 1:
                        updateTimeLineForUp(ticker, last);
                        break;
                    case 2:
                        updateTimeLineForDown(ticker, last);
                        break;
                    case 3:
                        updateTimeLineForCurrent(ticker, last);
                        break;
                }
                old = last;
            }
            else {
                old = last;
                updateTimeLineForCurrent(ticker, last);
            }
        }

        var okCoinWebSocket = {};
        okCoinWebSocket.init = function (uri) {
            this.wsUri = uri;

            okCoinWebSocket.websocket = new WebSocket(okCoinWebSocket.wsUri);

            okCoinWebSocket.websocket.onopen = function (evt) {
                onOpen(evt)
            };
            okCoinWebSocket.websocket.onclose = function (evt) {
                onClose(evt)
            };
            okCoinWebSocket.websocket.onmessage = function (evt) {
                onMessage(evt)
            };
            okCoinWebSocket.websocket.onerror = function (evt) {
                onError(evt)
            };

            //setInterval(checkConnect,5000);
        }

        function onOpen(evt) {
            doSend("{'event':'addChannel','channel':'ok_sub_spotusd_btc_ticker'}");
            doSend("{'event':'addChannel','channel':'ok_sub_spotusd_ltc_ticker'}");
            doSend("{'event':'addChannel','channel':'ok_sub_spotusd_eth_ticker'}");
        }

        function onMessage(e) {
            var array = JSON.parse(e.data);
            if (array[0].data.last != undefined) {
                var last = array[0].data.last;
                var recievedPair = array[0].channel.split('_')[3].toUpperCase() + "_USD";
                if (isStart) {
                    switch (state) {
                        case 1:
                            if (recievedPair == pair) {
                                if (last <= $("#down").val()) {
                                    stop();
                                    $("#modal-danger").modal('show');
                                    alarm();
                                    updateTimeLineForRecivedGoal(recievedPair, last);
                                }
                                recieved = true;
                            }
                            break;
                        case 2:
                            if (recievedPair == pair) {
                                if (last >= $("#up").val()) {
                                    stop();
                                    $("#modal-success").modal('show');
                                    alarm();
                                    updateTimeLineForRecivedGoal(recievedPair, last);
                                }
                                recieved = true;
                            }
                            break;
                        case 3:
                            if (recievedPair == pair) {
                                if (last <= $("#down").val()) {
                                    stop();
                                    $("#modal-danger").modal('show');
                                    alarm();
                                    updateTimeLineForRecivedGoal(recievedPair, last);
                                }
                                else if (last >= $("#up").val()) {
                                    stop();
                                    $("#modal-success").modal('show');
                                    alarm();
                                    updateTimeLineForRecivedGoal(recievedPair, last);
                                }
                                recieved = true;
                            }
                            break;
                    }
                    if (recieved && state != 0) {
                        newItemRecieved(last, recievedPair);
                        recieved = false;
                    }
                }
                updateUI(last, recievedPair);
            }
        }

        function doSend(message) {
            okCoinWebSocket.websocket.send(message);
        }

        window.onload = okCoinWebSocket.init("wss://real.okcoin.com:10440/websocket/okcoinapi");

        //function getTicker(ticker) {
        //    $.ajax({
        //        url: 'https://www.okcoin.com/api/v1/ticker.do?symbol=' + ticker,
        //        method: 'GET',
        //        error: function (e) {
        //            console.log(e);
        //        },
        //        success: function (res) {
        //        }
        //    });
        //}
        //var tickers = ["BTC_USD", "ETH_USD", "LTC_USD"];
        //var index = 0;

        //(function () {
        //    getTicker(tickers[index]);
        //    if (index != 2)
        //        index++;
        //    else
        //        index = 0;
        //    setTimeout(arguments.callee, 5000);
        //})();
        $(function () {
            if ($(".select2").val() != "Ничего не выбрано") {
                $(".start").removeAttr("disabled");
                $(".start").attr('enabled', 'enabled');
            }
            else {
                $(".start").removeAttr("enabled");
                $(".start").attr('disabled', 'disabled');
            }
            $("#pair").change(function () {
                if ($(this).val() != "Ничего не выбрано") {
                    $(".start").removeAttr("disabled");
                    $(".start").attr('enabled', 'enabled');
                }
                else {
                    $(".start").removeAttr("enabled");
                    $(".start").attr('disabled', 'disabled');
                }
            });
            $(".select2").select2();
            $(".stop").click(function () {
                stop();
            })
            $(".start").click(function () {
                $(".start").removeAttr("enabled");
                $(".start").attr('disabled', 'disabled');
                $(".stop").removeAttr("disabled");
                $(".stop").attr('enabled', 'enabled');
                pair = $("#pair").val();
                isStart = true;
                state = selectState($("#up").val(), $("#down").val());
                if (state == 4) {
                    stop();
                    $.jGrowl("Неверный ввод", {
                        sticky: false,
                        position: 'top-right',
                        theme: 'bg-orange'
                    });
                }
            });
        });
    </script>
}
